@page "/xlsio/form-controls"
@inject Microsoft.JSInterop.IJSRuntime JS
@inject Microsoft.AspNetCore.Hosting.IHostingEnvironment hostingEnvironment;
@using System.IO;

@using Syncfusion.Blazor.Buttons
@*Hidden:Lines*@

@using blazor_samples.Data.FileFormats.XlsIO
@{
    SampleBrowser.CurrentSampleName = "Form Controls";
    SampleBrowser.CurrentControlName = "XlsIO";
    SampleBrowser.CurrentControlCategory = "Data Management";
    SampleBrowser.CurrentControl = SampleBrowser.Config.XlsIO;
    SampleBrowser.ActionDescription = new string[] {
@"<p>This sample demonstrates how to use form controls in spreadsheet using XlsIO.</p>"
};
    SampleBrowser.Description = new string[] {
@"<p>Essential XlsIO can read and write form controls such as text boxes, check boxes, combo boxes and option buttons.</p>
<p style='display: block'><b>Features:</b></p>
<ul>
<li>Creating rich reports with text boxes, check boxes, and combo boxes using XlsIO</li>
<li>Text box formatting</li>
<li>Check boxes with Cell Link</li>
<li>Combo boxes with formatting</li>
<li>Option button with formatting</li>
</ul>"
};

}

@*End:Hidden*@

<div class="control-section">
    <p style="font-weight:normal">Click the button to view an Excel spreadsheet generated by Essential XlsIO. Please note that Microsoft Excel Viewer or Microsoft Excel is required to view the resultant document.</p>

    <div class="radio-control">
        <h5 class="row">Save As:</h5>
        <div class="e-radio-wrapper">
            <SfRadioButton Label="XLS" Name="XLS" Value="SaveOption" Checked="@(excelVersion == "XLS")" @onchange="@(() => excelVersion = "XLS")"></SfRadioButton>
        </div>
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
        <div class="e-radio-wrapper">
            <SfRadioButton Label="XLSX" Name="XLSX" Value="SaveOption" Checked="@(excelVersion == "XLSX")" @onchange="@(() => excelVersion = "XLSX")"></SfRadioButton>
        </div>
    </div>
    <div class="button-section">
        <div id="button-control">
            <div class="row">
                <div>
                    <SfButton @onclick="FormControlsXlsIO">Create Document</SfButton>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .radio-control {
        margin: 5% 0 2% 0;
    }

    .control-section .row {
        margin: 10px 0;
    }
</style>

@code {
    MemoryStream excelStream;
    string excelVersion = "XLSX";

    /// <summary>
    /// Create and download the Excel document with form controls
    /// </summary>
    protected void FormControlsXlsIO()
    {
        FormControlsService service = new FormControlsService(hostingEnvironment);
        excelStream = service.FormControlsXlsIO(excelVersion);
        if (excelVersion == "XLSX")
        {
            JS.SaveAs("Sample.xlsx", excelStream.ToArray());
        }
        else
        {
            JS.SaveAs("Sample.xls", excelStream.ToArray());
        }
    }
}