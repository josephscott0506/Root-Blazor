@page "/xlsio/sparklines"
@inject Microsoft.JSInterop.IJSRuntime JS
@inject Microsoft.AspNetCore.Hosting.IHostingEnvironment hostingEnvironment
@using System.IO;

@using Syncfusion.Blazor.Buttons
@*Hidden:Lines*@

@using blazor_samples.Data.FileFormats.XlsIO
@{
    SampleBrowser.CurrentSampleName = "Sparklines";
    SampleBrowser.CurrentControlName = "XlsIO";
    SampleBrowser.CurrentControlCategory = "Charts";
    SampleBrowser.CurrentControl = SampleBrowser.Config.XlsIO;
    SampleBrowser.ActionDescription = new string[] {
@"<p>This sample demonstrates how to create sparkline charts using XlsIO.</p>"
};
    SampleBrowser.Description = new string[] {
@"<p>Sparkline is a small chart in a worksheet cell that provides visual representation of data. Essential XlsIO has the APIs for creating and manipulating sparklines.</p>
<p style='display: block'><b>Features:</b></p>
<ul>
<li>Creation of Sparkline types</li>
<li>Sparkline creation from values fetched from a template document</li>
</ul>"
};

}

@*End:Hidden*@

<div class="control-section">
    <p style="font-weight:normal">Click the button to view an Excel spreadsheet generated by Essential XlsIO. Please note that Microsoft Excel Viewer or Microsoft Excel is required to view the resultant document.</p>

    <div class="button-section">
        <div id="button-control">
            <div class="row">
                <div>
                    <SfButton @onclick="SparklinesXlsIO">Create Document</SfButton>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .control-section .row {
        margin: 10px 0;
    }
</style>

@code {
    MemoryStream excelStream;

    /// <summary>
    /// Create and download the Excel document with sparklines
    /// </summary>
    protected void SparklinesXlsIO()
    {
        SparklinesService service = new SparklinesService(hostingEnvironment);
        excelStream = service.SparklinesXlsIO();
        JS.SaveAs("Sample.xlsx", excelStream.ToArray());
    }
}