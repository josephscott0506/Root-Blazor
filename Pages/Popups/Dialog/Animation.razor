@page "/dialog/animation"

@using Syncfusion.Blazor
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Buttons

@inherits SampleBaseComponent;

<div class="col-lg-12 control-section" id="target">
    <div id="customization">
        <div class="animate">
            <SfButton IsPrimary="true" CssClass="e-outline" Content="Zoom" @onclick="@(()=>OnBtnclicked("Zoom"))"></SfButton>
        </div>
        <div class="animate">
            <SfButton IsPrimary="true" CssClass="e-outline" Content="Flip XDown" @onclick="@(()=>OnBtnclicked("FlipXDown"))"></SfButton>
        </div>
        <div class="animate">
            <SfButton IsPrimary="true" CssClass="e-outline" Content="Flip XUp" @onclick="@(()=>OnBtnclicked("FlipXUp"))"></SfButton>
        </div>
        <div class="animate">
            <SfButton IsPrimary="true" CssClass="e-outline" Content="Flip YLeft" @onclick="@(()=>OnBtnclicked("FlipYLeft"))"></SfButton>
        </div>
        <div class="animate">
            <SfButton IsPrimary="true" CssClass="e-outline" Content="Flip YRight" @onclick="@(()=>OnBtnclicked("FlipYRight"))"></SfButton>
        </div>
    </div>
    <SfDialog id="defaultDialog" @ref="DialogObj" IsModal="true" Height="180px" Width="285px" Target="#target" ShowCloseIcon="true">
        <DialogTemplates>
            <Header>Animation Dialog</Header>
            <Content>The dialog is configured with animation effect. It is opened or closed with @BtnContent animation.</Content>
        </DialogTemplates>
        <DialogAnimationSettings Effect="@Effects" Duration=400 Delay=50></DialogAnimationSettings>
        <DialogButtons>
            <DialogButton ButtonModel="@Defaultbutton" OnClick="@OnClicked"></DialogButton>
        </DialogButtons>
    </SfDialog>
</div>

<style>

    html,
    body,
    #container {
        height: 100%;
        overflow: hidden;
        width: 100%;
        position: relative;
        min-height: 400px;
    }

    .text {
        text-transform: capitalize;
    }

    #customization {
        display: table;
        margin: 0 auto;
    }

    .animate {
        display: table-cell;
        padding-left: 20px;
    }
</style>

@code {
    SfDialog DialogObj;

    public string BtnContent = "Zoom In or Out";
    public DialogEffect Effects = DialogEffect.Zoom;

    private void OnBtnclicked(string value)
    {
        switch (value)
        {
            case "Zoom":
                this.Effects = DialogEffect.Zoom;                
                break;
            case "FlipXDown":
                this.Effects = DialogEffect.FlipXDown;
                break;
            case "FlipXUp":
                this.Effects = DialogEffect.FlipXUp;
                break;
            case "FlipYLeft":
                this.Effects = DialogEffect.FlipYLeft;
                break;
            case "FlipYRight":
                this.Effects = DialogEffect.FlipYRight;
                break;
        }
        this.BtnContent = value;
        this.StateHasChanged();
        this.DialogObj.Show();
    }
    private void OnClicked(object arg)
    {
        this.DialogObj.Hide();
    }
    public class ButtonModel
    {
        public string content { get; set; }
        public bool isPrimary { get; set; }
    }

    public ButtonModel Defaultbutton = new ButtonModel { content = "Hide", isPrimary = true };
}