@page "/listbox/api"

@using Syncfusion.Blazor.DropDowns

@inherits SampleBaseComponent;

<div class="col-lg-8 control-section">
    <div id="listbox-control1">
        @{

            if (this.OrderValue == "Descending")
            {
                this.SortValue = Syncfusion.Blazor.Lists.SortOrder.Descending;
            }

            if (this.OrderValue == "Ascending")
            {
                this.SortValue = Syncfusion.Blazor.Lists.SortOrder.Ascending;
            }

            if (this.OrderValue == "None")
            {
                this.SortValue = Syncfusion.Blazor.Lists.SortOrder.None;
            }
        }
        <SfListBox DataSource="@VegetableData" TValue="string[]" TItem="Vegetables" SortOrder="@SortValue">
            <ListBoxFieldSettings Text="Vegetable" Value="Id" GroupBy="Category"></ListBoxFieldSettings>
            <ListBoxSelectionSettings Mode="@Mode"></ListBoxSelectionSettings>
        </SfListBox>
    </div>
</div>
<div class="col-lg-4 property-section">
    <table id="property" title="Properties" style="width: 100%">
        <tbody>
            <tr>
                <td style="width: 50%;padding-top:10px">
                    <div>Sort order</div>
                </td>
                <td style="width: 50%;padding-top:10px">
                    <div style="max-width: 200px">
                        <SfDropDownList PopupHeight="200px" DataSource="@SortItems" @bind-Value="@OrderValue" TValue="string" TItem="ValueDetails">
                            <DropDownListEvents ValueChange="OrderChange" TValue="string"></DropDownListEvents>
                            <DropDownListFieldSettings Text="Text"></DropDownListFieldSettings>
                        </SfDropDownList>
                    </div>
                </td>
            </tr>
            <tr>
                <td style="width: 50%;padding-top:10px">
                    <div>Selection Mode</div>
                </td>
                <td style="width: 50%;padding-top:10px">
                    <div style="max-width: 200px">
                        <SfDropDownList PopupHeight="200px" DataSource="@SelectionType" @bind-Value="@SortOrderValue" TValue="string" TItem="ValueDetails">
                            <DropDownListEvents ValueChange="ModeChange" TValue="string"></DropDownListEvents>
                            <DropDownListFieldSettings Text="Text"></DropDownListFieldSettings>
                        </SfDropDownList>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
</div>

<style>

    #listbox-control {
        width: 350px;
        margin: auto;
        margin-bottom: 15px;
    }

    @@media screen and (max-width: 590px) {
        #listbox-control {
            width: 100%;
        }
    }
</style>


@code{

    SelectionMode Mode = SelectionMode.Single;
    public string OrderValue { get; set; }
    public Syncfusion.Blazor.Lists.SortOrder SortValue { get; set; }
    public string SortOrderValue { get; set; }
    private void OrderChange(ChangeEventArgs<string> args)
    {
        this.OrderValue = args.Value;
    }

    private void ModeChange(ChangeEventArgs<string> args)
    {
        if (args.Value.ToString() == "Single")
        {
            this.Mode = SelectionMode.Single;
        }
        else
        {
            this.Mode = SelectionMode.Multiple;
        }
    }

    protected override void OnInitialized()
    {
        this.OrderValue = "None";
        this.SortOrderValue = "Single";
    }

    public List<ValueDetails> SortItems = new List<ValueDetails>
{
        new ValueDetails{ Text = "None" },
        new ValueDetails{ Text = "Ascending" },
        new ValueDetails{ Text = "Descending" }

        };

    public List<ValueDetails> SelectionType = new List<ValueDetails>
{
        new ValueDetails { Text = "Single" },
        new ValueDetails { Text = "Multiple" }
        };

    public class ValueDetails
    {
        public string Text { get; set; }
    }
    public List<Vegetables> VegetableData = new List<Vegetables>
{
        new Vegetables { Vegetable = "Cabbage", Category= "Leafy and Salad", Id= "item1" },
        new Vegetables{ Vegetable = "Chickpea", Category= "Beans", Id= "item2" },
        new Vegetables{ Vegetable = "Garlic", Category= "Bulb and Stem", Id= "item3"  },
        new Vegetables{ Vegetable = "Green bean", Category= "Beans", Id= "item4" },
        new Vegetables{ Vegetable = "Horse gram", Category= "Beans", Id= "item5"},
        new Vegetables{ Vegetable = "Nopal", Category= "Bulb and Stem", Id= "item6" },
        new Vegetables{ Vegetable = "Onion", Category= "Bulb and Stem", Id= "item7" },
        new Vegetables{ Vegetable = "Pumpkins", Category= "Leafy and Salad", Id= "item8" },
        new Vegetables{ Vegetable = "Spinach", Category= "Leafy and Salad", Id= "item9" },
        new Vegetables{ Vegetable = "Wheat grass", Category= "Leafy and Salad", Id= "item10" },
        new Vegetables{ Vegetable = "Yarrow", Category = "Leafy and Salad", Id = "item11" }

        };
    public class Vegetables
    {
        public string Vegetable { get; set; }
        public string Category { get; set; }
        public string Id { get; set; }

    }
}
