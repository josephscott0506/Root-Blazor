@page "/DateRangePicker/Format"

@using Syncfusion.Blazor.Calendars
@using System
@using Syncfusion.Blazor.DropDowns
@using Newtonsoft.Json
@inherits SampleBaseComponent;
    <div>
        <div class=" control-section col-lg-8 date-height">
            <div id="wrapper" class="daterangepicker-section">
                <div id="daterangepicker-control">
                    <SfDateRangePicker Format="@format" StartDate="@Start" EndDate="@End"></SfDateRangePicker>
                </div>
            </div>
        </div>
        <div class="col-lg-4 property-section">
            <div>
                <SfDropDownList TItem="DateFormat" TValue="string" PopupHeight="230px" Index="0" DataSource="@formats">
                    <DropDownListEvents TValue="string" ValueChange="OnChange"></DropDownListEvents>
                    <DropDownListFieldSettings Text="Text" Value="ID"></DropDownListFieldSettings>
                </SfDropDownList>
            </div>
        </div>
    </div>

<style>
    #wrapper {
        max-width: 300px;
        margin: 0px auto;
        padding-top: 20px;
    }

    .control-section.col-lg-8.date-height {
        border-right: 1px solid #D7D7D7;
        min-height: 365px;
    }

    .property-section {
        top: 55px;
        width: 200px;
        margin-left: 80px;
        padding-bottom: 15px;
    }
</style>

@code {
    public DateTime? Start { get; set; } = DateTime.Now;
    public DateTime? End { get; set; } = DateTime.Now.AddDays(20);
    public class DateFormat
    {
        public string ID { get; set; }

        public string Text { get; set; }
    }
    public string format { get; set; } = "dd/MMM/yy hh:mm a";
    private List<DateFormat> formats = new List<DateFormat>() {
        new DateFormat(){ ID= "format1", Text= "dd/MMM/yy hh:mm a" },
        new DateFormat(){ ID= "format2", Text= "yyyy/MM/dd HH:mm" },
        new DateFormat(){ ID= "format3", Text= "dd/MMMM/yyyy" },
     };
    public void OnChange(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string> args)
    {
        var itemData = JsonConvert.DeserializeObject<DateFormat>(args.ItemData != null ? args.ItemData.ToString() : "");

        this.format = itemData.Text;
    }
}