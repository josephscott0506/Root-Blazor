@page "/progress-bar/circular"
@using Syncfusion.Blazor.ProgressBar
@inject NavigationManager Navigation
@inherits SampleBaseComponent;

<div class="control-section">
    <div class="row" style="margin-top: 4%;">

        <div class="col-lg-3 col-md-3 col-3" align="center">
             <SfProgressBar @ref="ProObj1" Type="ProgressType.Circular" Value="60" Width="160px" Height="160px"
                                    Minimum="0" Maximum="100" StartAngle="180" EndAngle="180"
                                    Theme="@CurrentTheme">
                        <ProgressBarAnimation Enable="true" Duration="2000" Delay="0"></ProgressBarAnimation>
                    </SfProgressBar>
            <div class="progress-text-align">Determinate</div>
        </div>

        <div class="col-lg-3 col-md-3 col-3" align="center">
               <SfProgressBar @ref="ProObj2" Type="ProgressType.Circular" Value="30" Width="160px" Height="160px"
                                    Minimum="0" Maximum="100" SecondaryProgress="60"
                                    Theme="@CurrentTheme">
                        <ProgressBarAnimation Enable="true" Duration="2000" Delay="0"></ProgressBarAnimation>
                    </SfProgressBar>
            <div class="progress-text-align">Buffer </div>

        </div>

        <div class="col-lg-3 col-md-3 col-3" align="center">
            <SfProgressBar @ref="ProObj3" Type="ProgressType.Circular" Value="100" Width="160px" Height="160px"
                                    SegmentCount="4" Minimum="0" Maximum="100"
                                    Theme="@CurrentTheme">
                        <ProgressBarAnimation Enable="true" Duration="2000" Delay="0"></ProgressBarAnimation>
                    </SfProgressBar>
            <div class="progress-text-align">Segment</div>
        </div>

        <div class="col-lg-3 col-md-3 col-3" align="center">
            <SfProgressBar @ref="ProObj4" Type="ProgressType.Circular" Value="20" Width="160px" Height="160px" 
                                    StartAngle="180" EndAngle="180" CornerRadius="CornerType.Round"
                                    IsIndeterminate="true" Minimum="0" Maximum="100"
                                    Theme="@CurrentTheme">
                        <ProgressBarAnimation Enable="true" Duration="2000" Delay="0"></ProgressBarAnimation>
                    </SfProgressBar>
            <div class="progress-text-align">Indeterminate</div>
        </div>
    </div>
    <div class="row" align="center">
        <button id="reLoad" class="e-control e-btn e-lib e-outline e-primary" @onclick="ProgressRefresh">Reload</button>
    </div>
</div>

@code{
    SfProgressBar ProObj1, ProObj2, ProObj3, ProObj4;
    public void ProgressRefresh()
    {
        ProObj1.Refresh();
        ProObj2.Refresh();
        ProObj3.Refresh();
        ProObj4.Refresh();
    }

    string CurrentUri;
    ProgressTheme CurrentTheme;
    protected override void OnInitialized()
    {
        CurrentUri = Navigation.Uri;
        if (CurrentUri.IndexOf("material") > -1)
        {
            CurrentTheme = ProgressTheme.Material;
        }
        else if (CurrentUri.IndexOf("fabric") > -1)
        {
            CurrentTheme = ProgressTheme.Fabric;
        }
        else if (CurrentUri.IndexOf("bootstrap4") > -1)
        {
            CurrentTheme = ProgressTheme.Bootstrap4;
        }
        else if (CurrentUri.IndexOf("bootstrap") > -1)
        {
            CurrentTheme = ProgressTheme.Bootstrap;
        }
        else if (CurrentUri.IndexOf("highcontrast") > -1)
        {
            CurrentTheme = ProgressTheme.HighContrast;
        }
        else
        {
            CurrentTheme = ProgressTheme.Bootstrap4;
        }
    }

}
    <style>
           #control-container {
        padding: 0px !important;
    }
    .progress-text-align {
        font-family: Roboto-Regular;
        font-size: 14px;
        color: #3D3E3C;        
    }


    #reLoad {
        border-radius: 4px;
        text-transform: capitalize;
        margin-top: 3%;
    }
    </style>