@page "/maps/zooming"

@using Syncfusion.Blazor.Maps
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Buttons

@inherits SampleBaseComponent;
<div class="col-lg-8 control-section sb-property-border">
    <SfMaps>
        <MapsZoomSettings Enable="@ZoomCheckedState" EnablePanning="@PanCheckedState" Toolbars="@zoomToolbar" ZoomOnClick="SingleClickCheckedState" PinchZooming="@PinchZoomCheckedState" MouseWheelZoom="@MouseWheelCheckedState" DoubleClickZoom="@DoubleClickCheckedState"></MapsZoomSettings>
        <MapsLayers>
            <MapsLayer ShapeData="@WorldMap" ShapeDataPath="continent" ShapePropertyPath='@("continent")' AnimationDuration="@AnimationCheckState" DataSource="@ZoomingDataSource">
                <MapsShapeSettings Autofill="true" ColorValuePath="color"></MapsShapeSettings>
            </MapsLayer>
        </MapsLayers>
    </SfMaps>
</div>
<div class="col-lg-3 property-section">
    &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br>
    <div class="property-panel-section">
        <div class="property-panel-header">Properties</div>
        <div class="property-panel-content">
            <table style="width:100%" title="Properties">
                <tbody>
                    <tr style="height: 35px">
                        <td style="width: 70%" class="property-text">
                            Zooming
                        </td>
                        <td style="width: 50%">
                            <SfCheckBox Checked="@ZoomCheckedState" ValueChange="@ZoomCheckBox"></SfCheckBox>
                        </td>
                    </tr>
                    <tr style="height: 35px">
                        <td style="width: 70%" class="property-text">
                            Panning
                        </td>
                        <td style="width: 50%">
                            <SfCheckBox Checked="@PanCheckedState" ValueChange="@PanCheckBox"></SfCheckBox>
                        </td>
                    </tr>
                    <tr style="height: 35px">
                        <td style="width: 70%" class="property-text">
                            Mouse Wheel Zoom
                        </td>
                        <td style="width: 50%">
                            <SfCheckBox Checked="@MouseWheelCheckedState" ValueChange="@MouseWheelCheckBox"></SfCheckBox>
                        </td>
                    </tr>
                    <tr style="height: 35px">
                        <td style="width: 70%" class="property-text">
                            Pinch zoom
                        </td>
                        <td style="width: 50%">
                            <SfCheckBox Checked="@PinchZoomCheckedState" ValueChange="@PinchZoomCheckBox"></SfCheckBox>
                        </td>
                    </tr>
                    <tr style="height: 35px">
                        <td style="width: 70%" class="property-text">
                            Single click Zoom
                        </td>
                        <td style="width: 50%">
                            <SfCheckBox Checked="@SingleClickCheckedState" ValueChange="@SingleClickCheckBox" Disabled="@SingleClickDisable"></SfCheckBox>
                        </td>
                    </tr>
                    <tr style="height: 35px">
                        <td style="width: 70%" class="property-text">
                            DoubleClick Zoom
                        </td>
                        <td style="width: 50%">
                            <SfCheckBox Checked="@DoubleClickCheckedState" ValueChange="@DoubleClickCheckBox" Disabled="@DoubleClickDisable"></SfCheckBox>
                        </td>
                    </tr>
                    <tr style="height: 35px">
                        <td style="width: 70%" class="property-text">
                            Animation duration <span style="margin-left:10px;">@AnimationCheckState ms</span>
                        </td>                        
                        <td style="width: 50%">
                            <SfSlider TValue="double" Value="@AnimationCheckState" Step="250" Min="0" Max="1000" Type=SliderType.MinRange>
                                <SliderEvents TValue="double" ValueChange="AnimationSlider"></SliderEvents>
                            </SfSlider>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {
    public Boolean DoubleClickDisable = false;
    public Boolean SingleClickDisable = false;
    public double AnimationCheckState = 500;
    private Boolean SingleClickCheckedState = false;
    public string[] zoomToolbar = new string[] { "Zoom", "ZoomIn", "ZoomOut", "Pan", "Reset" };
    private Boolean ZoomCheckedState = true;
    private Boolean PanCheckedState = true;
    public Boolean MouseWheelCheckedState = true;
    public Boolean PinchZoomCheckedState = true;
    public Boolean DoubleClickCheckedState;
    public MapDataSettings WorldMap = new MapDataSettings
    {
        async = true,
        dataOptions = "scripts/MapsData/WorldMap.json",
        type = "GET"
    };
    public class MapDataSettings
    {
        public Boolean async { get; set; }
        public String dataOptions { get; set; }
        public String type { get; set; }
    };
    public class ZoomData
    {
        public string country;
        public string continent;
        public string CategoryName;
        public double Sales;
        public string color;
    };
    public List<ZoomData> ZoomingDataSource = new List<ZoomData>
{
        new ZoomData { country="RUS", continent="Europe", CategoryName="Books", Sales=3746, color="#EC9B79" },
        new ZoomData { country="IND", continent="Asia", CategoryName="Books", Sales=10688, color="#7BC1E8" },
        new ZoomData { country="CAN", continent="North America", CategoryName="Books", Sales=10882, color="#B5E485" },
        new ZoomData { country="BRA", continent="South America", CategoryName="Books", Sales=13776, color="#78D0D3" },
        new ZoomData { country="JPN", continent="Asia", CategoryName="Books", Sales=19390, color="#7BC1E8" },
        new ZoomData { country="AUS", continent="Australia", CategoryName="Books", Sales=30716, color="#D6D572" },
        new ZoomData { country="CAF", continent="Africa", CategoryName="Books", Sales=18718.0, color="#DF819C" }
    };
    private void AnimationSlider(Syncfusion.Blazor.Inputs.SliderChangeEventArgs<double> args)
    {
        AnimationCheckState = args.Value;
    }
    private void ZoomCheckBox(Syncfusion.Blazor.Buttons.ChangeEventArgs args)
    {
        ZoomCheckedState = args.Checked;
    }
    private void MouseWheelCheckBox(Syncfusion.Blazor.Buttons.ChangeEventArgs args)
    {
        MouseWheelCheckedState = args.Checked;
    }
    private void PanCheckBox(Syncfusion.Blazor.Buttons.ChangeEventArgs args)
    {
        PanCheckedState = args.Checked;
    }
    private void PinchZoomCheckBox(Syncfusion.Blazor.Buttons.ChangeEventArgs args)
    {
        PinchZoomCheckedState = args.Checked;
    }
    private void SingleClickCheckBox(Syncfusion.Blazor.Buttons.ChangeEventArgs args)
    {
        SingleClickCheckedState = args.Checked;
        DoubleClickDisable = (SingleClickCheckedState) ? true : false;
    }
    private void DoubleClickCheckBox(Syncfusion.Blazor.Buttons.ChangeEventArgs args)
    {
        DoubleClickCheckedState = args.Checked;
        SingleClickDisable = (DoubleClickCheckedState) ? true : false;
    }
}
