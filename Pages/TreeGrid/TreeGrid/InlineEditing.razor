@page "/tree-grid/inline-editing"

@using Syncfusion.Blazor.TreeGrid
@using Syncfusion.Blazor.DropDowns
@*Hidden:Lines*@
@using ej2_blazor_wrapdata
@inherits SampleBaseComponent;
@*End:Hidden*@


<div class="col-lg-9 control-section">
    <div class="content-wrapper">
        <div class="row">
            <SfTreeGrid DataSource="TreeData" IdMapping="TaskId" ParentIdMapping="ParentId" TreeColumnIndex="1" AllowPaging="true" Toolbar="@ToolbarItems">
                <TreeGridPageSettings PageSize="2"></TreeGridPageSettings>
                <TreeGridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true" Mode="@GridEditingmode"></TreeGridEditSettings>
                <TreeGridColumns>
                    <TreeGridColumn Field="TaskId" HeaderText="Task ID" ValidationRules="@(new { required=true, number=true})"  Width="80" IsPrimaryKey="true" TextAlign="Syncfusion.Blazor.Grids.TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="TaskName" HeaderText="Task Name" ValidationRules="@(new { required=true})"  Width="240"></TreeGridColumn>
                    <TreeGridColumn Field="StartDate" HeaderText="Start Date" ValidationRules="@(new { date=true})" Format="d" Type=Syncfusion.Blazor.Grids.ColumnType.Date Width="100" TextAlign="Syncfusion.Blazor.Grids.TextAlign.Right" EditType=Syncfusion.Blazor.Grids.EditType.DatePickerEdit></TreeGridColumn>
                    <TreeGridColumn Field="Duration" HeaderText="Duration" ValidationRules="@(new { number=true, min=0})" Width="100" TextAlign="Syncfusion.Blazor.Grids.TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="Progress" HeaderText="Progress" ValidationRules="@(new {minLength=3})" Width="100"></TreeGridColumn>

                </TreeGridColumns>
            </SfTreeGrid>
        </div>
    </div>
</div>

<div class="col-lg-3 property-section">
    <div class="property-panel-header">Properties</div>
    <table id="property" title="Properties" style="width: 100%;">
        <tr style="height: 50px">
            <td class="left-side" style="width: 35% !important; padding: 6px 6px 6px 6px">Edit Mode</td>
            <td>
                <SfDropDownList TValue="string" TItem="DropDownData" @ref="DropDown" DataSource="@DropDownEditmode" @bind-Value="@Editmodes" >
                    <DropDownListEvents TValue="string" ValueChange="ModeChange"></DropDownListEvents>
                    <DropDownListFieldSettings Text="Name" Value="ID"></DropDownListFieldSettings>
                </SfDropDownList>
            </td>
        </tr>
    </table>
 </div>

        @code{

        SfDropDownList<string, DropDownData> DropDown;

        public List<WrapData> TreeData { get; set; }

        public string Editmodes { get; set; } = "Cell Editing" ;

        public EditMode GridEditingmode { get; set; }

        public List<string> ToolbarItems { get; set; }

        public List<DropDownData> DropDownEditmode = new List<DropDownData>();


        protected override void OnInitialized()
        {
           

            this.ToolbarItems = new List<string>() { "Add", "Delete", "Update", "Cancel" };
            this.TreeData = WrapData.GetWrapData().ToList();
            this.DropDownEditmode.Add(new DropDownData() {ID="Cell Editing", Name="Cell Editing"});
            this.DropDownEditmode.Add(new DropDownData() {ID="Row Editing", Name="Row Editing"});
        }

        public class DropDownData {
            public string ID { get; set; }
            public string Name { get; set; }
        }

        public void ModeChange(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string> args)

        {
            if(args.Value == "Cell Editing")
            {
                ToolbarItems = new List<string>() { "Add", "Delete", "Update", "Cancel" };
                GridEditingmode = EditMode.Cell;
            }
            if(args.Value == "Row Editing")
            {
                ToolbarItems = new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel" };
                GridEditingmode = EditMode.Row;
            }
        }
        public class TreeEditModes
        {
            public string ID { get; set; }
            public string Name { get; set; }
        }
        }
