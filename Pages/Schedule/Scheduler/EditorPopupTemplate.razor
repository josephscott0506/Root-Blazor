@page "/scheduler/editor-template"

@using Syncfusion.Blazor.Schedule
@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Inputs
@inherits SampleBaseComponent;

<div class="control-section">
    <div class="content-wrapper">
        <SfSchedule TValue="ScheduleData.DoctorsEventData" Width="100%" Height="650px" SelectedDate="@(new DateTime(2020, 1, 16))">
            <ScheduleTemplates>
                <EditorTemplate>
                    <input type="hidden" name="Id" class="e-field" value="@((context as ScheduleData.DoctorsEventData).Id)" />
                    <table class="custom-event-editor" width="100%" cellpadding="5">
                        <tbody>
                            <tr>
                                <td class="e-textlabel">Summary</td>
                                <td colspan="4">
                                    <SfTextBox Id="Subject" CssClass="e-field e-input" Value="@((context as ScheduleData.DoctorsEventData).Subject)"></SfTextBox>
                                </td>
                            </tr>
                            <tr>
                                <td class="e-textlabel">Status</td>
                                <td class="dropdown" colspan="4">
                                    <SfDropDownList TValue="string" TItem="EventFields" ID="EventType" DataSource="@StatusData" Placeholder="Choose status" CssClass="e-field" Value="@((context as ScheduleData.DoctorsEventData).EventType)" HtmlAttributes="@EventType">
                                        <DropDownListFieldSettings Value="Id"></DropDownListFieldSettings>
                                    </SfDropDownList>
                                </td>
                            </tr>
                            <tr>
                                <td class="e-textlabel">From</td>
                                <td colspan="4">
                                    <SfDateTimePicker ID="StartTime" HtmlAttributes="@StartName" CssClass="e-field" Value="@((context as ScheduleData.DoctorsEventData).StartTime)"></SfDateTimePicker>
                                </td>
                            </tr>
                            <tr>
                                <td class="e-textlabel">To</td>
                                <td colspan="4">
                                    <SfDateTimePicker ID="EndTime" HtmlAttributes="@EndName" CssClass="e-field" Value="@((context as ScheduleData.DoctorsEventData).EndTime)"></SfDateTimePicker>

                                </td>
                            </tr>
                            <tr>
                                <td class="e-textlabel">Reason</td>
                                <td colspan="4">
                                    <textarea id="Description" class="e-field e-input" name="Description" rows="3" cols="50" value="@((context as ScheduleData.DoctorsEventData).Description)"
                                              style="width: 100%; height: 60px !important; resize: vertical"></textarea>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </EditorTemplate>
            </ScheduleTemplates>
            <ScheduleEventSettings TValue="ScheduleData.DoctorsEventData" DataSource="@DataSource">
            </ScheduleEventSettings>
        </SfSchedule>
    </div>
</div>
@code{
    public class EventFields
    {
        public string Id { get; set; }
        public string Text { get; set; }
    }
    List<EventFields> StatusData = new List<EventFields>() {
            new EventFields(){ Id= "New", Text= "New" },
            new EventFields(){ Id= "Requested", Text= "Requested" },
            new EventFields(){ Id= "Confirmed", Text= "Confirmed" },
        };
    Dictionary<string, object> StartName = new Dictionary<string, object>()
    {
        {"data-name","StartTime"},
    };
    Dictionary<string, object> EndName = new Dictionary<string, object>()
    {
        {"data-name","EndTime"},
    };
    Dictionary<string, object> EventType = new Dictionary<string, object>()
    {
        {"data-name","EventType"},
    };

    List<ScheduleData.DoctorsEventData> DataSource = new ScheduleData().GetDoctorsEventData();
}

<style>
    .custom-event-editor td {
        padding: 7px;
        padding-right: 16px;
    }
    .dropdown .e-dropdownlist  {
        color: inherit !important;
    }
</style>