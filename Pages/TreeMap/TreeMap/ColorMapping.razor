@page "/treemap/color-mapping"

@using Syncfusion.Blazor.TreeMap
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Buttons
@inherits SampleBaseComponent;


<div class="col-lg-9 control-section sb-property-border">
    <SfTreeMap Format="N0" UseGroupingSeparator="true" RangeColorValuePath="@ColorValuePath" EqualColorValuePath="@EqualColorValuePath" WeightValuePath="Area" DataSource="@ColorDataSource">
        <TreeMapTitleSettings Text="Top 10 largest islands in the World">
            <TreeMapTitleTextStyle Size="15px"></TreeMapTitleTextStyle>
        </TreeMapTitleSettings>
        <TreeMapLegendSettings Visible="true" Position="LegendPosition.Bottom" Mode="LegendMode.Interactive" Height="10">
            <TreeMapLegendTitle Text="@LegendText"></TreeMapLegendTitle>
        </TreeMapLegendSettings>
        <TreeMapTooltipSettings Visible="true" Format="Name: ${Name}<br>Area: ${Area} per square kms<br>Continent: ${Location}" Opacity="0.8"></TreeMapTooltipSettings>
        <TreeMapLeafItemSettings LabelPath="Name">
            <TreeMapLeafColorMappings>
                <TreeMapLeafColorMapping From="@ColorMappingFromOne" MinOpacity="@MinOpacity" MaxOpacity="MaxOpacity" To="@ColorMappingToOne" Color="@ColorMappingColorOne" Label="@ColorMappingLabelOne" Value="@ColorMappingValueOne"></TreeMapLeafColorMapping>
                <TreeMapLeafColorMapping From="@ColorMappingFromTwo" To="@ColorMappingToTwo" Color="@ColorMappingColorTwo" Label="@ColorMappingLabelTwo" Value="@ColorMappingValueTwo"></TreeMapLeafColorMapping>
                <TreeMapLeafColorMapping From="@ColorMappingFromThree" To="@ColorMappingToThree" Color="@ColorMappingColorThree" Label="@ColorMappingLabelThree" Value="@ColorMappingValueThree"></TreeMapLeafColorMapping>
                <TreeMapLeafColorMapping From="@ColorMappingFromFour" To="@ColorMappingToFour" Color="@ColorMappingColorFour" Label="@ColorMappingLabelFour" Value="@ColorMappingValueFour"></TreeMapLeafColorMapping>
                <TreeMapLeafColorMapping From="@ColorMappingFromFive" To="@ColorMappingToFive" Color="@ColorMappingColorFive" Label="@ColorMappingLabelFive" Value="@ColorMappingValueFive"></TreeMapLeafColorMapping>
            </TreeMapLeafColorMappings>
            <TreeMapLeafBorder Color="white" Width="0.5"></TreeMapLeafBorder>
        </TreeMapLeafItemSettings>
    </SfTreeMap>
</div>
<div class="col-lg-3 property-section">
    &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br>
    <div class="property-panel-section">
        <div class="property-panel-header">Properties</div>
        <div class="property-panel-content">
            <table style="width:100%" title="Properties">
                <tbody>

                    <tr style="height: 35px">
                        <td style="width: 70%" class="property-text">
                            Color Mapping Type
                        </td>
                        <td style="width: 50%">
                            <SfDropDownList Placeholder="Select colorMapping Type" DataSource="@ColorMappingType" Value="@colorMappingTypeValue" Width="120px">
                                <DropDownListEvents TValue="string" ValueChange="ColorMappingValueTypeChange"></DropDownListEvents>
                                <DropDownListFieldSettings Text="Name" Value="Value"></DropDownListFieldSettings>
                            </SfDropDownList>
                        </td>
                    </tr>
                    <tr style="height: 35px"></tr>
                    <tr style="height: 35px;width:130%;display:@display">
                        <td style="width: 90%" class="property-text">
                            Change Opacity
                        </td>
                        <td style="width: 50%; ">
                            <SfCheckBox ValueChange="OpacityChange" Checked="@opacityChecked"></SfCheckBox>
                        </td>
                    </tr>
                    <tr style="height: 70px;">
                        <td>
                            <div style="display: @minDisplay">Min Opacity </div>
                        </td>
                        <td>
                            <div>
                                <input type="range" value="@minRange" min="0" max="1" step="0.1" @onchange="MinRangeChange" style="display: @minDisplay" />
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div style="display: @minDisplay">Max Opacity </div>
                        </td>
                        <td>
                            <div>
                                <input type="range" value="@maxRange" min="0" max="1" step="0.1" @onchange="MaxRangeChange" style="display: @minDisplay" />
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>


@code{
    public string colorMappingTypeValue = "Range";
    public string EqualColorValuePath = null;
    public string LegendText = "Area";
    public string minDisplay = "none";
    public double MinOpacity = 0;
    public double MaxOpacity = 0;
    public double minRange = 0.5;
    public string display = "none";
    public double maxRange = 1;
    public Boolean opacityChecked;
    public string ColorValuePath = "Area";
    public double? ColorMappingFromOne = 100000;
    public double? ColorMappingToOne = 250000;
    public string[] ColorMappingColorOne = { "#547C84" };
    public string ColorMappingLabelOne = "0.1M - 0.25M";
    public string ColorMappingValueOne = null;

    public double? ColorMappingFromTwo = 250000;
    public double? ColorMappingToTwo = 550000;
    public string[] ColorMappingColorTwo = { "#37AFAB" };
    public string ColorMappingLabelTwo = "0.25M - 0.55M";
    public string ColorMappingValueTwo = null;

    public double? ColorMappingFromThree = 550000;
    public double? ColorMappingToThree = 750000;
    public string[] ColorMappingColorThree = { "#A4D6AD" };
    public string ColorMappingLabelThree = "0.55M - 0.75M";
    public string ColorMappingValueThree = null;

    public double? ColorMappingFromFour = 750000;
    public double? ColorMappingToFour = 2250000;
    public string[] ColorMappingColorFour = { "#DEEBAE" };
    public string ColorMappingLabelFour = "0.75M - 2M";
    public string ColorMappingValueFour = null;

    public double? ColorMappingFromFive = 0;
    public double? ColorMappingToFive = 0;
    public string[] ColorMappingColorFive = { null };
    public string ColorMappingLabelFive = null;
    public string ColorMappingValueFive = null;

    public void ColorMappingValueTypeChange(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string> args)
    {
        colorMappingTypeValue = args.Value;
        if (colorMappingTypeValue == "Range")
        {
            minDisplay = "none";
            EqualColorValuePath = null;
            display = "none";
            opacityChecked = false;
            LegendText = "Area";
            ColorValuePath = "Area";
            ColorMappingFromOne = 100000;
            ColorMappingToOne = 250000;
            ColorMappingColorOne = new string[] { "#547C84" };
            ColorMappingLabelOne = "0.1M - 0.25M";
            ColorMappingValueOne = null;

            ColorMappingFromTwo = 250000;
            ColorMappingToTwo = 550000;
            ColorMappingColorTwo = new string[] { "#37afab" };
            ColorMappingLabelTwo = "0.25M - 0.55M";
            ColorMappingValueTwo = null;

            ColorMappingFromThree = 550000;
            ColorMappingToThree = 750000;
            ColorMappingColorThree = new string[] { "#A4D6AD" };
            ColorMappingLabelThree = "0.55M - 0.75M";
            ColorMappingValueThree = null;

            ColorMappingFromFour = 750000;
            ColorMappingToFour = 2250000;
            ColorMappingColorFour = new string[] { "#DEEBAE" };
            ColorMappingLabelFour = "0.75M - 2M";
            ColorMappingValueFour = null;

            ColorMappingFromFive = null;
            ColorMappingToFive = null;
            ColorMappingColorFive = null;
            ColorMappingLabelFive = null;
            ColorMappingValueFive = null;
        }
        else if (colorMappingTypeValue == "Equal")
        {
            minDisplay = "none";
            display = "none";
            opacityChecked = false;
            LegendText = "Continent";
            EqualColorValuePath = "Location";
            ColorValuePath = null;
            ColorMappingFromOne = null;
            ColorMappingToOne = null;
            ColorMappingColorOne = null;
            ColorMappingColorOne = new string[] { "#DEEBAE" };
            ColorMappingLabelOne = null;
            ColorMappingValueOne = "North America";

            ColorMappingFromTwo = null;
            ColorMappingToTwo = null;
            ColorMappingColorTwo = null;
            ColorMappingColorTwo = new string[] { "#A4D6AD" };
            ColorMappingLabelTwo = null;
            ColorMappingValueTwo = "Oceania";

            ColorMappingFromThree = null;
            ColorMappingToThree = null;
            ColorMappingColorThree = null;
            ColorMappingColorThree = new string[] { "#37AFAB" };
            ColorMappingLabelThree = null;
            ColorMappingValueThree = "Asia";

            ColorMappingFromFour = null;
            ColorMappingToFour = null;
            ColorMappingColorFour = null;
            ColorMappingColorFour = new string[] { "#547C84" };
            ColorMappingLabelFour = null;
            ColorMappingValueFour = "Africa";

            ColorMappingFromFive = null;
            ColorMappingToFive = null;
            ColorMappingColorFive = null;
            ColorMappingColorFive = new string[] { "#CEBF93" };
            ColorMappingLabelFive = null;
            ColorMappingValueFive = "Europe";
        }
        else
        {
            display = "block";
            EqualColorValuePath = null;
            LegendText = "Area";
            ColorValuePath = "Area";
            ColorMappingFromOne = 100000;
            ColorMappingToOne = 2230800;
            ColorMappingColorOne = new string[] { "#F0D6AD", "#19547B" };
            ColorMappingLabelOne = "0.1M - 2M";
            ColorMappingValueOne = null;

            ColorMappingFromTwo = null;
            ColorMappingToTwo = null;
            ColorMappingColorTwo = null;
            ColorMappingLabelTwo = null;
            ColorMappingValueTwo = null;

            ColorMappingFromThree = null;
            ColorMappingToThree = null;
            ColorMappingColorThree = null;
            ColorMappingLabelThree = null;
            ColorMappingValueThree = null;

            ColorMappingFromFour = null;
            ColorMappingToFour = null;
            ColorMappingColorFour = null;
            ColorMappingLabelFour = null;
            ColorMappingValueFour = null;

            ColorMappingFromFive = null;
            ColorMappingToFive = null;
            ColorMappingColorFive = null;
            ColorMappingLabelFive = null;
            ColorMappingValueFive = null;
        }

    }

    private void OpacityChange(Syncfusion.Blazor.Buttons.ChangeEventArgs args)
    {
        opacityChecked = args.Checked;
        minDisplay = (opacityChecked) ? "block" : "none";
    }
    private void MinRangeChange(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        minRange = Convert.ToDouble(args.Value);
        MinOpacity = minRange;
    }
    private void MaxRangeChange(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        maxRange = Convert.ToDouble(args.Value);
        MaxOpacity = maxRange;
    }
    public class type
    {
        public string Value { get; set; }
        public string Name { get; set; }
    };
    public List<type> ColorMappingType = new List<type> {
        new type { Value="Range", Name="Range" },
        new type { Value="Equal", Name="Equal" },
        new type { Value="Desaturation", Name="Desaturation" }
    };
    public class Data
    {
        public string Name;
        public string Location;
        public double Area;
        public double Population;
    };
    public List<Data> ColorDataSource = new List<Data>
{
        new Data { Name="Greenland", Area=2130800, Population=56483, Location="North America" },
        new Data { Name="New Guinea", Area=785753, Population=1306940, Location="Oceania"},
        new Data { Name="Borneo", Area=743330, Population=19804064, Location="Asia" },
        new Data { Name="Madagascar", Area=587713, Population=22005222, Location="Africa"},
        new Data { Name="Baffin Island", Area=507451, Population=10745, Location="North America" },
        new Data { Name="Sumatra", Area=443066, Population=50000000, Location="Asia" },
        new Data { Name="Honshu", Area=225800, Population=103000000, Location="Asia" },
        new Data { Name="Victoria Island", Area=217291, Population=1875, Location="North America"},
        new Data { Name="Great Britain", Area=209331, Population=60800000, Location="Europe" },
        new Data { Name="Ellesmere Island", Area=183965, Population=146, Location="North America" }
    };
}