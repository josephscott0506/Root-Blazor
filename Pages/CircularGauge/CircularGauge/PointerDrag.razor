@page "/circular-gauge/pointer-drag"

@using Syncfusion.Blazor.CircularGauge
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Inputs

@inherits SampleBaseComponent;

<div class="col-lg-9 control-section sb-property-border">
    <div class="control-section">
        <SfCircularGauge EnablePointerDrag="@pointerDrag" EnableRangeDrag="rangeDrag">
            <CircularGaugeEvents OnDragEnd="OnDragEnd"></CircularGaugeEvents>
            <CircularGaugeAxes>
                <CircularGaugeAxis EndAngle="140" StartAngle="220" Radius="80%" Minimum="0" Maximum="120">
                    <CircularGaugeAnnotations>
                        <CircularGaugeAnnotation Angle="180" ZIndex="1" Radius="45%">
                            <ContentTemplate>
                                <div style="font-size: 14px;color:@templateColor;font-weight: lighter;font-style: oblique;margin-left:-20px"><span>@templateValue MPH</span></div>
                            </ContentTemplate>
                        </CircularGaugeAnnotation>
                    </CircularGaugeAnnotations>
                    <CircularGaugeAxisLineStyle Width="0.01" Color="#9E9E9E">
                    </CircularGaugeAxisLineStyle>
                    <CircularGaugeAxisMajorTicks UseRangeColor="true">
                    </CircularGaugeAxisMajorTicks>
                    <CircularGaugeAxisMinorTicks UseRangeColor="true">
                    </CircularGaugeAxisMinorTicks>
                    <CircularGaugeAxisLabelStyle UseRangeColor="true">
                    </CircularGaugeAxisLabelStyle>
                    <CircularGaugeRanges>
                        <CircularGaugeRange Start="@firstRangeStart" End="@firstRangeEnd" StartWidth="8" EndWidth="8" Radius="108%" Color="@firstRangeColor">
                        </CircularGaugeRange>
                        <CircularGaugeRange Start="@secondRangeStart" End="@secondRangeEnd" StartWidth="8" EndWidth="8" Radius="108%" Color="@secondRangeColor">
                        </CircularGaugeRange>
                        <CircularGaugeRange Start="@thirdRangeStart" End="@thirdRangeEnd" StartWidth="8" EndWidth="8" Radius="108%" Color="@thirdRangeColor">
                        </CircularGaugeRange>
                    </CircularGaugeRanges>
                    <CircularGaugePointers>
                        <CircularGaugePointer Value="@pointerValue" Radius="60%" Color="@PointerColor" MarkerWidth="5">
                            <CircularGaugeCap Radius="10">
                                <CircularGaugeCapBorder Width="5" Color="@PointerColor">
                                </CircularGaugeCapBorder>
                            </CircularGaugeCap>
                            <CircularGaugeNeedleTail Length="0.01%" Color="@PointerColor">
                            </CircularGaugeNeedleTail>
                        </CircularGaugePointer>
                        <CircularGaugePointer Value="@pointerValue" Radius="110%" Color="@PointerColor" MarkerWidth="20" MarkerHeight="20" Type="PointerType.Marker" MarkerShape="GaugeShape.InvertedTriangle">
                        </CircularGaugePointer>
                    </CircularGaugePointers>
                </CircularGaugeAxis>
            </CircularGaugeAxes>
        </SfCircularGauge>
    </div>
</div>
<div class="col-md-3 property-section">
    <div class="property-panel-section">
        <div class="property-panel-header">Properties</div>
        <div class="property-panel-content">
            <table  style="width: 100%">
                <tr style="height: 50px">
                    <td style="width: 45%">
                        <div>Pointer Value <span> &nbsp;&nbsp;&nbsp;@sliderValueText</span> </div>
                    </td>
                    <td style="width: 40%;">
                        <div>
                            <input type="range" value="@pointerValue" min="0" max="120" @onchange="PointerDragChange" />
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td style="width: 45%">
                        <div>Allow Pointer Drag</div>
                    </td>
                    <td style="width: 40%;">
                        <div>
                            <SfCheckBox ValueChange="@EnableDragCheckbox" Checked="@enableDragChange"></SfCheckBox>
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td style="width: 45%">
                        <div>Allow Ranges Drag</div>
                    </td>
                    <td style="width: 40%;">
                        <div>
                            <SfCheckBox ValueChange="@EnableRangeChange" Checked="@enableRangeChange"></SfCheckBox>
                        </div>
                    </td>
                </tr>
            </table>
        </div>
    </div>
</div>

@code{
    private Boolean pointerDrag = true;
    private Boolean rangeDrag = false;
    private String firstRangeColor = "#30B32D";
    private String secondRangeColor = "#E5C31C";
    private String thirdRangeColor = "#F03E3E";
    private String PointerColor = "#E5C31C";
    private String templateValue = "70";
    private String templateColor = "#E5C31C";
    private Boolean enableDragChange = true;
    private Boolean enableRangeChange = false;
    private Double pointerSliderValue = 70;
    private Double pointerValue = 70;
    private Double sliderValueText = 70;
    private double firstRangeStart = 0;
    private double firstRangeEnd = 40;
    private double secondRangeStart = 40;
    private double secondRangeEnd = 100;
    private double thirdRangeStart = 100;
    private double thirdRangeEnd = 120;
    public void EnableDragCheckbox(Syncfusion.Blazor.Buttons.ChangeEventArgs args)
    {
        enableDragChange = args.Checked;
        pointerDrag = args.Checked;
    }
    public void EnableRangeChange(Syncfusion.Blazor.Buttons.ChangeEventArgs args)
    {
        enableRangeChange = args.Checked;
        rangeDrag = args.Checked;
    }
    private void PointerDragChange(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        pointerSliderValue = Convert.ToDouble(args.Value);
        setPointer(pointerSliderValue);
    }
    public void OnDragEnd(Syncfusion.Blazor.CircularGauge.IPointerDragEventArgs args)
    {
        if (args.Type == "pointerEnd")
            setPointer(args.CurrentValue);
    }
    private void setPointer(double currentPointerValue)
    {
        PointerColor = templateColor = ((currentPointerValue <= firstRangeEnd && currentPointerValue >= firstRangeStart) ? firstRangeColor :
            ((currentPointerValue > secondRangeStart && currentPointerValue <= secondRangeEnd) ? secondRangeColor :
            ((currentPointerValue > thirdRangeStart && currentPointerValue <= thirdRangeEnd) ? thirdRangeColor : null)));
        pointerValue = currentPointerValue;
        templateValue = (Math.Ceiling(currentPointerValue)).ToString();
        sliderValueText = Math.Ceiling(currentPointerValue);
    }
}
