@page "/chart/rounded-column"
@using Syncfusion.Blazor.Charts
@inject NavigationManager NavigationManager
@inherits SampleBaseComponent;

    <div class="control-section">
        <SfChart Title="Trade in Food Groups">
            <ChartEvents Load="ChartLoad"/>
            <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
            <ChartPrimaryXAxis TickPosition="AxisPosition.Inside" LabelPosition="AxisPosition.Inside" ValueType="Syncfusion.Blazor.Charts.ValueType.Category" Interval="1">
                <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
                <ChartAxisLabelStyle Color="#ffffff"></ChartAxisLabelStyle>
            </ChartPrimaryXAxis>
            <ChartPrimaryYAxis Minimum="0" Maximum="300" Interval="50">
                <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
                <ChartAxisLabelStyle Color="transparent"></ChartAxisLabelStyle>
                <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
                <ChartAxisMinorGridLines Width="0"></ChartAxisMinorGridLines>
                <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
                <ChartAxisMinorTickLines Width="0"></ChartAxisMinorTickLines>
            </ChartPrimaryYAxis>
            <ChartSeriesCollection>
                <ChartSeries DataSource="@ChartData" XName="x" YName="y" Name="Tiger" Type="ChartSeriesType.Column">
                    <ChartMarker>
                        <ChartDataLabel Visible="true" Position="LabelPosition.Top">
                            <ChartDataLabelFont FontWeight="600" Color="#ffffff"></ChartDataLabelFont>
                        </ChartDataLabel>
                    </ChartMarker>
                    <ChartCornerRadius BottomLeft="10" BottomRight="10" TopLeft="10" TopRight="10"></ChartCornerRadius>
                </ChartSeries>
            </ChartSeriesCollection>
            <ChartTooltipSettings Enable="false"></ChartTooltipSettings>
            <ChartLegendSettings Visible="false"></ChartLegendSettings>
        </SfChart>
    </div>

@code{

    public class RoundedColumnChartData
    {
        public string x { get; set; }
        public double y{ get; set; }
        public string text { get; set; }
    }

    public List<RoundedColumnChartData> ChartData = new List<RoundedColumnChartData>
            {
                  new RoundedColumnChartData { x= "Egg", y= 106, text= "Egg" },
                  new RoundedColumnChartData { x= "Fish", y= 103, text= "Fish" },
                  new RoundedColumnChartData { x= "Misc", y= 198, text= "Misc" },
                  new RoundedColumnChartData { x= "Tea", y= 189, text= "Tea" },
                  new RoundedColumnChartData { x= "Fruits", y= 250, text= "Fruits" }
            };

            string CurrentUri;
            void ChartLoad(ILoadedEventArgs Args)
    {
        CurrentUri = NavigationManager.Uri;
        if (CurrentUri.IndexOf("material") > -1)
        {
            Args.Theme = ChartTheme.Material;
        }
        else if (CurrentUri.IndexOf("fabric") > -1)
        {
            Args.Theme = ChartTheme.Fabric;
        }
        else if (CurrentUri.IndexOf("bootstrap4") > -1)
        {
            Args.Theme = ChartTheme.Bootstrap4;
        }
        else if (CurrentUri.IndexOf("bootstrap") > -1)
        {
            Args.Theme = ChartTheme.Bootstrap;
        }
        else if (CurrentUri.IndexOf("highcontrast") > -1)
        {
            Args.Theme = ChartTheme.HighContrast;
        }
        else
        {
            Args.Theme = ChartTheme.Bootstrap4;
        }
    }
}
