@page "/chart/bar"
@using Syncfusion.Blazor.Charts
@inject NavigationManager NavigationManager
@inherits SampleBaseComponent;

<div class="control-section">
    <SfChart Title="UK Trade in Food Groups - 2015">
		<ChartEvents Load="ChartLoad"/>
        <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
        <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category" Title="Food">
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
        </ChartPrimaryXAxis>
        <ChartPrimaryYAxis LabelFormat="{value}B" EdgeLabelPlacement="EdgeLabelPlacement.Shift">
            <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
            <ChartAxisLabelStyle Color="transparent"></ChartAxisLabelStyle>
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
        </ChartPrimaryYAxis>
        <ChartTooltipSettings Enable="true"></ChartTooltipSettings>
        <ChartSeriesCollection>
            <ChartSeries DataSource="@BarData" XName="x" YName="y" Name="Imports" Width="2" Type="ChartSeriesType.Bar">
                <ChartMarker>
                    <ChartDataLabel Visible="true" Position="LabelPosition.Top"></ChartDataLabel>
                </ChartMarker>
            </ChartSeries>
            <ChartSeries DataSource="@BarData" XName="x" YName="y1" Name="Exports" Width="2" Type="ChartSeriesType.Bar">
                <ChartMarker>
                    <ChartDataLabel Visible="true" Position="LabelPosition.Top"></ChartDataLabel>
                </ChartMarker>
            </ChartSeries>            
        </ChartSeriesCollection>
    </SfChart>
</div>

@code{
    public class BarChartData
    {
        public string x { get; set; }
        public double y { get; set; }
        public double y1 { get; set; }
    }
    public List<BarChartData> BarData =  new List<BarChartData>
    {
        new BarChartData { x= "Egg",  y= 2.2 , y1= 1.2 },
        new BarChartData { x= "Fish", y= 2.4 , y1= 1.3 },
        new BarChartData { x= "Misc", y= 3   , y1= 1.5 },
        new BarChartData { x= "Tea",  y= 3.1 , y1= 2.2 }
    };

    string CurrentUri;

    void ChartLoad(ILoadedEventArgs Args)
    {
        CurrentUri = NavigationManager.Uri;
        if (CurrentUri.IndexOf("material") > -1)
        {
            Args.Theme = ChartTheme.Material;
        }
        else if (CurrentUri.IndexOf("fabric") > -1)
        {
            Args.Theme = ChartTheme.Fabric;
        }
        else if (CurrentUri.IndexOf("bootstrap") > -1)
        {
            Args.Theme = ChartTheme.Bootstrap;
        }
        else if (CurrentUri.IndexOf("highcontrast") > -1)
        {
            Args.Theme = ChartTheme.HighContrast;
        }
        else
        {
            Args.Theme = ChartTheme.Bootstrap4;
        }
    }
}
