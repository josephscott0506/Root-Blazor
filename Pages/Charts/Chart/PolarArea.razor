@page "/chart/polar-area"
@using Syncfusion.Blazor.Charts
@using Syncfusion.Blazor.DropDowns
@inject NavigationManager NavigationManager
@inherits SampleBaseComponent;
<div class="row">
<div class="col-lg-9 control-section">
    <SfChart Title="Average Sales Comparison">
     <ChartEvents Load="ChartLoad"/>
        <ChartTooltipSettings Enable="true">
        </ChartTooltipSettings>
        <ChartPrimaryXAxis Interval="1" Coefficient="100" LabelPlacement="LabelPlacement.OnTicks" ValueType="Syncfusion.Blazor.Charts.ValueType.Category"></ChartPrimaryXAxis>
        <ChartPrimaryYAxis Title="Revenue in Millios" LabelFormat="{value}M"></ChartPrimaryYAxis>
        <ChartSeriesCollection>
            <ChartSeries DataSource="@DataSource" Opacity=0.5 Name="Product A" XName="x" Width="2" YName="y" Type="@SeriesType" DrawType="ChartDrawType.Area">
                <ChartSeriesBorder Color="transparent" Width="0"></ChartSeriesBorder>
            </ChartSeries>
            <ChartSeries DataSource="@DataSource" Opacity=0.5 Name="Product B" XName="x" Width="2" YName="y1" Type="@SeriesType" DrawType="ChartDrawType.Area">
                <ChartSeriesBorder Color="transparent" Width="0"></ChartSeriesBorder>
            </ChartSeries>
            <ChartSeries DataSource="@DataSource" Opacity=0.5 Name="Product C" XName="x" Width="2" YName="y2" Type="@SeriesType" DrawType="ChartDrawType.Area">
                <ChartSeriesBorder Color="transparent" Width="0"></ChartSeriesBorder>
            </ChartSeries>
        </ChartSeriesCollection>
    </SfChart>
</div>
    <div class="col-lg-3 property-section">
        <table style="width: 100%">
            <tr style="height:50px"><th>Properties</th></tr>
            <tr style="height: 50px">
                <td style="width: 50%">
                    <div>
                        Series Type:
                    </div>
                </td>
                <td style="width: 50%;">
                    <SfDropDownList TValue="string" TItem="SeriesTypes" @bind-Value="@DropVal" DataSource="@Country">
                        <DropDownListEvents TValue="string" ValueChange="ChangeSeriesType"></DropDownListEvents>
                        <DropDownListFieldSettings Value="Type"></DropDownListFieldSettings>
                    </SfDropDownList>
                </td>
            </tr>
        </table>
    </div>
</div>
@code{
    public string DropVal = "Polar";

    public class SeriesTypes
    {
        public string Type { get; set; }

        public string Code { get; set; }
    }

    List<SeriesTypes> Country = new List<SeriesTypes>
{
        new SeriesTypes() { Type = "Polar", Code = "P" },
        new SeriesTypes() { Type = "Radar", Code = "R" },
    };

    ChartSeriesType SeriesType = ChartSeriesType.Polar;
    public void ChangeSeriesType(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string> args)
    {
        this.SeriesType = (ChartSeriesType)Enum.Parse(typeof(ChartSeriesType), args.Value.ToString(), true);
        StateHasChanged();
    }

   
    public class PolarAreaChartData
    {
        public string x { get; set; }
        public double y { get; set; }
        public double y1 { get; set; }
        public double y2 { get; set; }
    }
    public List<PolarAreaChartData> DataSource = new List<PolarAreaChartData>
    {
          new PolarAreaChartData { x= "2000", y= 4  , y1= 2.6, y2= 2.8},
          new PolarAreaChartData { x= "2001", y= 3.0, y1= 2.8, y2= 2.5 },
          new PolarAreaChartData { x= "2002", y= 3.8, y1= 2.6, y2= 2.8 },
          new PolarAreaChartData { x= "2003", y= 3.4, y1= 3  , y2= 3.2 },
          new PolarAreaChartData { x= "2004", y= 3.2, y1= 3.6, y2= 2.9 },
          new PolarAreaChartData { x= "2005", y= 3.9, y1= 3  , y2= 2   }
    };
    string CurrentUri;
    void ChartLoad(ILoadedEventArgs Args)
    {
        CurrentUri = NavigationManager.Uri;
        if (CurrentUri.IndexOf("material") > -1)
        {
            Args.Theme = ChartTheme.Material;
        }
        else if (CurrentUri.IndexOf("fabric") > -1)
        {
            Args.Theme = ChartTheme.Fabric;
        }
        else if (CurrentUri.IndexOf("bootstrap4") > -1)
        {
            Args.Theme = ChartTheme.Bootstrap4;
        }
        else if (CurrentUri.IndexOf("bootstrap") > -1)
        {
            Args.Theme = ChartTheme.Bootstrap;
        }
        else if (CurrentUri.IndexOf("highcontrast") > -1)
        {
            Args.Theme = ChartTheme.HighContrast;
        }
        else
        {
            Args.Theme = ChartTheme.Bootstrap4;
        }
    }
}