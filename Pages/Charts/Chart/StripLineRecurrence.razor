@page "/chart/recurrence-strip-line"
@using Syncfusion.Blazor.Charts
@using Syncfusion.Blazor.Buttons
@inject NavigationManager NavigationManager
@inherits SampleBaseComponent;
    <div class="row">
        <div class="control-section col-md-8">
            <SfChart Title="World Pollution Report">
             <ChartEvents Load="ChartLoad"/>
                <ChartArea>
                    <ChartAreaBorder Width="0"></ChartAreaBorder>
                </ChartArea>
                <ChartPrimaryXAxis Interval="5" IntervalType="IntervalType.Years" EdgeLabelPlacement="EdgeLabelPlacement.Shift" ValueType="Syncfusion.Blazor.Charts.ValueType.DateTime">
                    <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
                    <ChartStriplines>
                        <ChartStripline Visible="@XAxis" StartFromAxis="true" Size="5" SizeType="SizeType.Years" IsRepeat="true" RepeatEvery="10" Color="rgba(167,169,171, 0.1)"></ChartStripline>
                    </ChartStriplines>
                </ChartPrimaryXAxis>

                <ChartPrimaryYAxis Minimum="0" Maximum="18000" Interval="2000">
                    <ChartAxisMajorGridLines Color="rgba(167,169,171, 0.3)"></ChartAxisMajorGridLines>
                    <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
                    <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
                    <ChartAxisLabelStyle Color="transparent"></ChartAxisLabelStyle>
                    <ChartStriplines>
                        <ChartStripline StartFromAxis="true" Size="2000" IsRepeat="true" RepeatEvery="4000" Visible="@YAxis" Color="rgba(167,169,171, 0.1)"></ChartStripline>
                    </ChartStriplines>
                </ChartPrimaryYAxis>

                <ChartSeriesCollection>
                    <ChartSeries Name="All sources" Type="ChartSeriesType.Column" DataSource="@PollutionReports" XName="XValue" YName="YValue" Width="2"></ChartSeries>
                    <ChartSeries Name="Autos & Light Trucks" Type="ChartSeriesType.Column" DataSource="PollutionReports" XName="XValue" YName="YValue1" Width="2"></ChartSeries>
                </ChartSeriesCollection>

                <ChartTooltipSettings Enable="true" Format=" Year: ${point.x}<br> Tons Per Day: ${point.y}"></ChartTooltipSettings>
            </SfChart>
        </div>
        <div class="col-md-4 property-section">
            <table  style="width: 100%">
                <tr style="height:50px"><th>Properties</th></tr>
                <tr  style="height: 50px">
                    <td style="width: 80%">
                        X Axis Striplines:
                    </td>
                    <td>
                        <SfCheckBox Checked="@XAxis" ValueChange="@CheckedXAxis"></SfCheckBox>
                    </td>
                </tr>
                <tr  style="height: 50px">
                    <td style="width: 80%">
                        Y Axis Striplines:
                    </td>
                    <td>
                        <SfCheckBox Checked="@YAxis" ValueChange="@CheckedYAxis"></SfCheckBox>
                    </td>
                </tr>
            </table>
        </div>
    </div>
        @code{
            private Boolean XAxis = true, YAxis = true;
            private void CheckedXAxis(Syncfusion.Blazor.Buttons.ChangeEventArgs args)
            {
                XAxis = args.Checked;
            }

            private void CheckedYAxis(Syncfusion.Blazor.Buttons.ChangeEventArgs args)
            {
                YAxis = args.Checked;
            }

            public class ChartData
            {
                public DateTime XValue;
                public double YValue;
                public double YValue1;
            }

            public List<ChartData> PollutionReports = new List<ChartData>
        {
        new ChartData { XValue = new DateTime(1970, 1, 1), YValue = 16500, YValue1 = 8000 },
        new ChartData { XValue = new DateTime(1975, 1, 1), YValue = 16000, YValue1 = 7600 },
        new ChartData { XValue = new DateTime(1980, 1, 1), YValue = 15400, YValue1 = 6400 },
        new ChartData { XValue = new DateTime(1985, 1, 1), YValue = 15800, YValue1 = 3700 },
        new ChartData { XValue = new DateTime(1990, 1, 1), YValue = 14000, YValue1 = 7200 },
        new ChartData { XValue = new DateTime(1995, 1, 1), YValue = 10500, YValue1 = 2300 },
        new ChartData { XValue = new DateTime(2000, 1, 1), YValue = 13300, YValue1 = 4000 },
        new ChartData { XValue = new DateTime(2005, 1, 1), YValue = 12800, YValue1 = 4800 },
    };
string CurrentUri;
    void ChartLoad(ILoadedEventArgs Args)
    {
        CurrentUri = NavigationManager.Uri;
        if (CurrentUri.IndexOf("material") > -1)
        {
            Args.Theme = ChartTheme.Material;
        }
        else if (CurrentUri.IndexOf("fabric") > -1)
        {
            Args.Theme = ChartTheme.Fabric;
        }
        else if (CurrentUri.IndexOf("bootstrap4") > -1)
        {
            Args.Theme = ChartTheme.Bootstrap4;
        }
        else if (CurrentUri.IndexOf("bootstrap") > -1)
        {
            Args.Theme = ChartTheme.Bootstrap;
        }
        else if (CurrentUri.IndexOf("highcontrast") > -1)
        {
            Args.Theme = ChartTheme.HighContrast;
        }
        else
        {
            Args.Theme = ChartTheme.Bootstrap4;
        }
    }

        }
